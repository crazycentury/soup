{"ast":null,"code":"var _jsxFileName = \"/Users/work/Documents/FinalProject/soup/src/context/AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { validateToken } from \"../api/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TOKEN_KEY = \"token\";\nconst AuthContext = /*#__PURE__*/createContext();\n\nconst AuthProvider = props => {\n  _s();\n\n  const {\n    children\n  } = props;\n  const [user, setUser] = useState(null);\n\n  const storeLoginData = data => {\n    setUser(data.user_data);\n    localStorage.setItem(TOKEN_KEY, data.token);\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem(TOKEN_KEY);\n  }; // Try to \"login\" using stored token after page refresh\n\n\n  useEffect(() => {\n    const token = localStorage.getItem(TOKEN_KEY);\n    if (!token) return;\n    validateToken(token).then(res => {\n      console.log(res.data);\n      setUser(res.data);\n    }).catch(() => {\n      setUser(null);\n    });\n  }, []);\n  const value = {\n    user,\n    storeLoginData,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n\n_c = AuthProvider;\nexport default AuthContext;\nexport { AuthProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","validateToken","TOKEN_KEY","AuthContext","AuthProvider","props","children","user","setUser","storeLoginData","data","user_data","localStorage","setItem","token","logout","removeItem","getItem","then","res","console","log","catch","value"],"sources":["/Users/work/Documents/FinalProject/soup/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\n\nimport { validateToken } from \"../api/auth\";\n\nconst TOKEN_KEY = \"token\";\nconst AuthContext = createContext();\n\nconst AuthProvider = (props) => {\n  const { children } = props;\n\n  const [user, setUser] = useState(null);\n\n  const storeLoginData = (data) => {\n    setUser(data.user_data);\n    localStorage.setItem(TOKEN_KEY, data.token);\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem(TOKEN_KEY);\n  };\n\n  // Try to \"login\" using stored token after page refresh\n  useEffect(() => {\n    const token = localStorage.getItem(TOKEN_KEY);\n\n    if (!token) return;\n\n    validateToken(token)\n      .then((res) => {\n        console.log(res.data);\n        setUser(res.data);\n      })\n      .catch(() => {\n        setUser(null);\n      });\n  }, []);\n\n  const value = {\n    user,\n    storeLoginData,\n    logout,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport default AuthContext;\nexport { AuthProvider };\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;AAEA,SAASC,aAAT,QAA8B,aAA9B;;AAEA,MAAMC,SAAS,GAAG,OAAlB;AACA,MAAMC,WAAW,gBAAGL,aAAa,EAAjC;;AAEA,MAAMM,YAAY,GAAIC,KAAD,IAAW;EAAA;;EAC9B,MAAM;IAAEC;EAAF,IAAeD,KAArB;EAEA,MAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,IAAD,CAAhC;;EAEA,MAAMS,cAAc,GAAIC,IAAD,IAAU;IAC/BF,OAAO,CAACE,IAAI,CAACC,SAAN,CAAP;IACAC,YAAY,CAACC,OAAb,CAAqBX,SAArB,EAAgCQ,IAAI,CAACI,KAArC;EACD,CAHD;;EAKA,MAAMC,MAAM,GAAG,MAAM;IACnBP,OAAO,CAAC,IAAD,CAAP;IACAI,YAAY,CAACI,UAAb,CAAwBd,SAAxB;EACD,CAHD,CAV8B,CAe9B;;;EACAH,SAAS,CAAC,MAAM;IACd,MAAMe,KAAK,GAAGF,YAAY,CAACK,OAAb,CAAqBf,SAArB,CAAd;IAEA,IAAI,CAACY,KAAL,EAAY;IAEZb,aAAa,CAACa,KAAD,CAAb,CACGI,IADH,CACSC,GAAD,IAAS;MACbC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACT,IAAhB;MACAF,OAAO,CAACW,GAAG,CAACT,IAAL,CAAP;IACD,CAJH,EAKGY,KALH,CAKS,MAAM;MACXd,OAAO,CAAC,IAAD,CAAP;IACD,CAPH;EAQD,CAbQ,EAaN,EAbM,CAAT;EAeA,MAAMe,KAAK,GAAG;IACZhB,IADY;IAEZE,cAFY;IAGZM;EAHY,CAAd;EAMA,oBAAO,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEQ,KAA7B;IAAA,UAAqCjB;EAArC;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAtCD;;GAAMF,Y;;KAAAA,Y;AAwCN,eAAeD,WAAf;AACA,SAASC,YAAT"},"metadata":{},"sourceType":"module"}