{"ast":null,"code":"var _jsxFileName = \"/Users/work/Documents/FinalProject/WebsiteSoup/Frontend/src/Component/DataTable/DataTable.js\";\nimport React from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { alpha, styled } from \"@mui/material/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledTableCell = styled(TableCell)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    border: \"none\",\n    fontSize: \"1rem\",\n    textAlign: \"center\",\n    [`&.${tableCellClasses.head}`]: {\n      backgroundColor: theme.palette.primary.main,\n      color: \"white\",\n      fontWeight: \"600\"\n    },\n    [`&.${tableCellClasses.body}`]: {\n      color: theme.palette.gray2.main,\n      fontWeight: \"500\"\n    }\n  };\n});\n_c = StyledTableCell;\nconst StyledTableRow = styled(TableRow)(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"white\"\n    },\n    \"&:nth-of-type(even)\": {\n      backgroundColor: alpha(theme.palette.primary.main, 0.2)\n    }\n  };\n});\n_c2 = StyledTableRow;\n\nconst DataTable = props => {\n  const {\n    headers,\n    rows,\n    maxWidth = \"calc(100% - 64px)\"\n  } = props;\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    sx: {\n      maxWidth,\n      mx: \"auto\",\n      my: \"32px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        minWidth: \"600px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: headers.map((header, index) => /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            children: header\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: rows.map((row, index) => /*#__PURE__*/_jsxDEV(StyledTableRow, {\n          children: row.map((item, index) => /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = DataTable;\nexport default DataTable;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledTableCell\");\n$RefreshReg$(_c2, \"StyledTableRow\");\n$RefreshReg$(_c3, \"DataTable\");","map":{"version":3,"names":["React","Paper","Table","TableBody","TableCell","tableCellClasses","TableContainer","TableHead","TableRow","alpha","styled","StyledTableCell","theme","border","fontSize","textAlign","head","backgroundColor","palette","primary","main","color","fontWeight","body","gray2","StyledTableRow","DataTable","props","headers","rows","maxWidth","mx","my","minWidth","map","header","index","row","item"],"sources":["/Users/work/Documents/FinalProject/WebsiteSoup/Frontend/src/Component/DataTable/DataTable.js"],"sourcesContent":["import React from \"react\";\n\nimport Paper from \"@mui/material/Paper\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\n\nimport { alpha, styled } from \"@mui/material/styles\";\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  border: \"none\",\n  fontSize: \"1rem\",\n  textAlign: \"center\",\n\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.primary.main,\n    color: \"white\",\n    fontWeight: \"600\",\n  },\n\n  [`&.${tableCellClasses.body}`]: {\n    color: theme.palette.gray2.main,\n    fontWeight: \"500\",\n  },\n}));\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: \"white\",\n  },\n\n  \"&:nth-of-type(even)\": {\n    backgroundColor: alpha(theme.palette.primary.main, 0.2),\n  },\n}));\n\nconst DataTable = (props) => {\n  const { headers, rows, maxWidth = \"calc(100% - 64px)\" } = props;\n\n  return (\n    <TableContainer component={Paper} sx={{ maxWidth, mx: \"auto\", my: \"32px\" }}>\n      <Table sx={{ minWidth: \"600px\" }}>\n        <TableHead>\n          <TableRow>\n            {headers.map((header, index) => (\n              <StyledTableCell key={index}>{header}</StyledTableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row, index) => (\n            <StyledTableRow key={index}>\n              {row.map((item, index) => (\n                <StyledTableCell key={index}>{item}</StyledTableCell>\n              ))}\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default DataTable;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,IAAoBC,gBAApB,QAA4C,yBAA5C;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,sBAA9B;;AAEA,MAAMC,eAAe,GAAGD,MAAM,CAACN,SAAD,CAAN,CAAkB;EAAA,IAAC;IAAEQ;EAAF,CAAD;EAAA,OAAgB;IACxDC,MAAM,EAAE,MADgD;IAExDC,QAAQ,EAAE,MAF8C;IAGxDC,SAAS,EAAE,QAH6C;IAKxD,CAAE,KAAIV,gBAAgB,CAACW,IAAK,EAA5B,GAAgC;MAC9BC,eAAe,EAAEL,KAAK,CAACM,OAAN,CAAcC,OAAd,CAAsBC,IADT;MAE9BC,KAAK,EAAE,OAFuB;MAG9BC,UAAU,EAAE;IAHkB,CALwB;IAWxD,CAAE,KAAIjB,gBAAgB,CAACkB,IAAK,EAA5B,GAAgC;MAC9BF,KAAK,EAAET,KAAK,CAACM,OAAN,CAAcM,KAAd,CAAoBJ,IADG;MAE9BE,UAAU,EAAE;IAFkB;EAXwB,CAAhB;AAAA,CAAlB,CAAxB;KAAMX,e;AAiBN,MAAMc,cAAc,GAAGf,MAAM,CAACF,QAAD,CAAN,CAAiB;EAAA,IAAC;IAAEI;EAAF,CAAD;EAAA,OAAgB;IACtD,sBAAsB;MACpBK,eAAe,EAAE;IADG,CADgC;IAKtD,uBAAuB;MACrBA,eAAe,EAAER,KAAK,CAACG,KAAK,CAACM,OAAN,CAAcC,OAAd,CAAsBC,IAAvB,EAA6B,GAA7B;IADD;EAL+B,CAAhB;AAAA,CAAjB,CAAvB;MAAMK,c;;AAUN,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAC3B,MAAM;IAAEC,OAAF;IAAWC,IAAX;IAAiBC,QAAQ,GAAG;EAA5B,IAAoDH,KAA1D;EAEA,oBACE,QAAC,cAAD;IAAgB,SAAS,EAAE1B,KAA3B;IAAkC,EAAE,EAAE;MAAE6B,QAAF;MAAYC,EAAE,EAAE,MAAhB;MAAwBC,EAAE,EAAE;IAA5B,CAAtC;IAAA,uBACE,QAAC,KAAD;MAAO,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAZ,CAAX;MAAA,wBACE,QAAC,SAAD;QAAA,uBACE,QAAC,QAAD;UAAA,UACGL,OAAO,CAACM,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,kBACX,QAAC,eAAD;YAAA,UAA8BD;UAA9B,GAAsBC,KAAtB;YAAA;YAAA;YAAA;UAAA,QADD;QADH;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAQE,QAAC,SAAD;QAAA,UACGP,IAAI,CAACK,GAAL,CAAS,CAACG,GAAD,EAAMD,KAAN,kBACR,QAAC,cAAD;UAAA,UACGC,GAAG,CAACH,GAAJ,CAAQ,CAACI,IAAD,EAAOF,KAAP,kBACP,QAAC,eAAD;YAAA,UAA8BE;UAA9B,GAAsBF,KAAtB;YAAA;YAAA;YAAA;UAAA,QADD;QADH,GAAqBA,KAArB;UAAA;UAAA;UAAA;QAAA,QADD;MADH;QAAA;QAAA;QAAA;MAAA,QARF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD,CAzBD;;MAAMV,S;AA2BN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}