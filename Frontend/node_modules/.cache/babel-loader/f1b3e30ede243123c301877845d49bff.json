{"ast":null,"code":"var _jsxFileName = \"/Users/work/Documents/FinalProject/soup/src/Component/AdminUserPage/AdminUserPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Stack from \"@mui/material/Stack\";\nimport AlertDialog from \"../AlertDialog/AlertDialog\";\nimport BaseAdminView from \"../BaseAdminView/BaseAdminView\";\nimport DataTable from \"../DataTable/DataTable\";\nimport { getAllUsers } from \"../../api/admin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tableHeaders = [\"Name\", \"Email\", \"Role\", \"Status\", \"Active\"];\n\nfunction ActionButton(props) {\n  const {\n    children\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    sx: {\n      width: \"100%\"\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ActionButton;\n\nfunction getUserRow(user) {\n  const userStatus = user.active ? \"Active\" : \"Inactive\";\n  return [user.name, user.email, user.role_name, /*#__PURE__*/_jsxDEV(ActionButton, {\n    children: userStatus\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Stack, {\n    direction: \"row\",\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(ActionButton, {\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ActionButton, {\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this)];\n}\n\nconst AdminUserPage = () => {\n  _s();\n\n  const [userRows, setUsersRows] = useState([]);\n  const [alertData, setAlertData] = useState({\n    open: false,\n    severity: \"\",\n    message: \"\"\n  });\n\n  const closeAlert = () => {\n    setAlertData({ ...alertData,\n      open: false\n    });\n  };\n\n  useEffect(() => {\n    getAllUsers().then(res => {\n      setUsersRows(res.data.map(getUserRow));\n    }).catch(err => {\n      var _err$response;\n\n      const errMsg = err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data;\n      setAlertData({\n        open: true,\n        severity: \"error\",\n        message: errMsg\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BaseAdminView, {\n    children: [/*#__PURE__*/_jsxDEV(DataTable, {\n      headers: tableHeaders,\n      rows: userRows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AlertDialog, {\n      open: alertData.open,\n      handleClose: closeAlert,\n      severity: alertData.severity,\n      message: alertData.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AdminUserPage, \"g4k5tG4o94rGngE0eJlbDGozdQg=\");\n\n_c2 = AdminUserPage;\nexport default AdminUserPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ActionButton\");\n$RefreshReg$(_c2, \"AdminUserPage\");","map":{"version":3,"names":["React","useEffect","useState","Button","Stack","AlertDialog","BaseAdminView","DataTable","getAllUsers","tableHeaders","ActionButton","props","children","width","getUserRow","user","userStatus","active","name","email","role_name","AdminUserPage","userRows","setUsersRows","alertData","setAlertData","open","severity","message","closeAlert","then","res","data","map","catch","err","errMsg","response"],"sources":["/Users/work/Documents/FinalProject/soup/src/Component/AdminUserPage/AdminUserPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport Button from \"@mui/material/Button\";\nimport Stack from \"@mui/material/Stack\";\n\nimport AlertDialog from \"../AlertDialog/AlertDialog\";\nimport BaseAdminView from \"../BaseAdminView/BaseAdminView\";\nimport DataTable from \"../DataTable/DataTable\";\n\nimport { getAllUsers } from \"../../api/admin\";\n\nconst tableHeaders = [\"Name\", \"Email\", \"Role\", \"Status\", \"Active\"];\n\nfunction ActionButton(props) {\n  const { children } = props;\n\n  return (\n    <Button variant=\"contained\" color=\"secondary\" sx={{ width: \"100%\" }}>\n      {children}\n    </Button>\n  );\n}\n\nfunction getUserRow(user) {\n  const userStatus = user.active ? \"Active\" : \"Inactive\";\n\n  return [\n    user.name,\n    user.email,\n    user.role_name,\n    <ActionButton>{userStatus}</ActionButton>,\n    <Stack direction=\"row\" spacing={2}>\n      <ActionButton>Add</ActionButton>\n      <ActionButton>Edit</ActionButton>\n    </Stack>,\n  ];\n}\n\nconst AdminUserPage = () => {\n  const [userRows, setUsersRows] = useState([]);\n  const [alertData, setAlertData] = useState({\n    open: false,\n    severity: \"\",\n    message: \"\",\n  });\n\n  const closeAlert = () => {\n    setAlertData({ ...alertData, open: false });\n  };\n\n  useEffect(() => {\n    getAllUsers()\n      .then((res) => {\n        setUsersRows(res.data.map(getUserRow));\n      })\n      .catch((err) => {\n        const errMsg = err?.response?.data;\n        setAlertData({ open: true, severity: \"error\", message: errMsg });\n      });\n  }, []);\n\n  return (\n    <BaseAdminView>\n      <DataTable headers={tableHeaders} rows={userRows} />\n\n      <AlertDialog\n        open={alertData.open}\n        handleClose={closeAlert}\n        severity={alertData.severity}\n        message={alertData.message}\n      />\n    </BaseAdminView>\n  );\n};\n\nexport default AdminUserPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}